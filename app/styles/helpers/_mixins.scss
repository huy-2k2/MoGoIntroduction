@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin absoluteCenter($direction: 'both', $position: absolute) {
    position: $position;

    @if $direction == 'left' {
        left: 50%;
        transform: translateX(-50%);
    }

    @if $direction == 'top' {
        top: 50%;
        transform: translateY(-50%);
    }

    @if $direction == 'both' {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin absoluteFull() {
    position: absolute;
    top: 0;
    left: 0;
    @include size(100%);
}

@mixin flexCenter() {
    display: flex;
    flex-direction: column;
    align-items: center;   
    justify-content: center;
}

@mixin maxWidth($breakPoint) {
    @media screen and (max-width: $breakPoint) {
        @content
    }
}

@mixin minWidth($breakPoint) {
    @media screen and (min-width: $breakPoint) {
        @content
    }
}

@mixin hideScroll() {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin scrollSnap() {
    scroll-snap-type: x mandatory;
    scroll-snap-stop: always;
}

@mixin scrollSnapChild {
    scroll-snap-align: start;
}

@mixin touchScroll($width: 80%, $gap: 3rem, $padding: 1rem) {
    @include hideScroll();
    @include scrollSnap();
    display: grid !important;
    justify-content: flex-start !important;
    grid-template-columns: unset;
    grid-template-rows: unset;
    grid-auto-columns: $width;
    grid-auto-flow: column;
    grid-column-gap: $gap;
    overflow-x: auto;
    padding: $padding;
    & > * {
        @include scrollSnapChild();
        width: unset;
    }
}

@mixin textClamp($row: 1, $size: 100%) {
    display: -webkit-box;
    -webkit-line-clamp: $row;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $size;
    max-width: $size;
    word-break: break-word;
    white-space: pre-wrap;
}

@mixin hoverEffect($itemClass, $contentClass, $is-move: 'move') {
    #{$itemClass} {
        position: relative;
        z-index: 1;

        & > * {
            transition: all 0.25s ease;
            will-change: transform;
        }

        &:hover {
            #{$contentClass} {
                opacity: 1;
                visibility: visible;
            }
            
            @if $is-move == 'move' {
                & > * {
                    transform: translate(-1rem, -1rem);
                }
            }
        }

        &::after {
            will-change: transform;
            content: '';
            @include absoluteFull();
            background-color: $third-color;
            z-index: -1;
        }
    }

    #{$contentClass} {
        @include absoluteFull();
        @include flexCenter();
        background-image: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
        opacity: 0;
        visibility: hidden;
    }
}